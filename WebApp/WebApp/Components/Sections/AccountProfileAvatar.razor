@attribute [StreamRendering]

@using System.Net.Http.Headers

@if(user == null)
{
    <p>Loading...</p>
}
else
{
    <div class="profile">
        <div class="profile-image">
            <img src="/images/uploads/profiles/@user.ProfileImageUrl" alt="@user.FirstName @user.LastName">

            <EditForm enctype="multipart/form-data" Model="@uploadModel" FormName="ProfileUpload" OnInvalidSubmit="HandleProfileUpload">
                <InputFile id="fileUploader" OnChange="HandleFileSelected" hidden />
                <label for="fileUploader" class="btn-circle btn-refresh"><i class="fa-sharp fa-regular fa-arrows-rotate"></i></label>
            </EditForm>
        </div>
        <div class="profile-info">
            <h5 class="displayname">@user.FirstName @user.LastName</h5>
            <p>@user.Email</p>
        </div>
    </div>
}


@code {
    private ApplicationUser user = default!;
    private MultipartFormDataContent uploadModel = new MultipartFormDataContent();
    private IBrowserFile? selectedFile;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        await LoadUserDataAsync();
    }

    private void HandleFileSelected(InputFileChangeEventArgs e)
    {
        selectedFile = e.File;
    }

    private async Task LoadUserDataAsync()
    {
        user = await UserManager.GetUserAsync(HttpContext.User) ?? null!;
    }

    public async Task HandleProfileUpload()
    {
        if (selectedFile != null)
        {
            using var content = new MultipartFormDataContent();
            var fileContent = new StreamContent(selectedFile.OpenReadStream(maxAllowedSize: 1024 * 1024 * 15));
            fileContent.Headers.ContentType = new MediaTypeHeaderValue(selectedFile.ContentType);
            content.Add(fileContent, "file", selectedFile.Name);

            try
            {
                var response = await Http.PostAsync("https://fileprovider-win23jsbackend-nikesjo.azurewebsites.net/api/upload", content);
                if (response.IsSuccessStatusCode)
                {
                    await LoadUserDataAsync();
                    StateHasChanged();
                }
                // else
                // {
                //     //handle errors if i want to
                // }
            }
            catch (Exception ex) {}
        }
    }
}
